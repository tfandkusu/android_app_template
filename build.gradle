// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath libs.android.gradle
        classpath libs.kotlin.gradle
        classpath libs.spotless.gradle
        classpath libs.hilt.gradle
        classpath libs.serialization.gradle
        classpath libs.firebase.appdistribution
        classpath libs.deploygate
        classpath libs.oss.licenses
    }
}

allprojects {
    apply plugin: "com.diffplug.spotless"
    spotless {
        ratchetFrom 'origin/main'
        kotlin {
            target '**/*.kt'
            targetExclude('**/*Dao.kt')
            ktlint("0.47.1").setUseExperimental(true)
        }
    }
}

allprojects {
    apply plugin: 'jacoco'
}

// jacocoReport タスクを作成
tasks.register("jacocoReport", JacocoReport) {
    // 全モジュールの testDebugUnitTest タスク一覧
    def tasks = subprojects.findAll { project ->
        // モジュールでないディレクトリも列挙されるので、build.gradle が存在するものだけを対象とする。
        project.file("build.gradle").exists()
    }.collect { project ->
        "$project.path:testDebugUnitTest"
    }
    // それらが完了してから、このタスクを実行する
    dependsOn(tasks)

    // XML形式 と HTML 形式の両方のカバレッジレポートを出力する
    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    // 全モジュールの kt ファイルのディレクトリ一覧
    def mySourceDirectories = subprojects.collect { project ->
        "${project.projectDir}/src/main/java"
    }
    //　全モジュールの class ファイルのディレクトリ一覧
    def classFileTrees = subprojects.collect { project ->
        fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/debug",
                includes: ["**/*ActionCreatorImpl.class", "**/*ReducerImpl.class",
                           "**/*UseCaseImpl.class",
                           "**/*RepositoryImpl.class",
                           "**/*RemoteDataStoreImpl.class", "**/*LocalDataStoreImpl.class",
                ])
    }
    // exec ファイル一覧
    def execFileTree = fileTree(dir: rootDir, includes: [
            "**/testDebugUnitTest.exec"
    ])
    // それらを JacocoReport タスクの設定値とする
    sourceDirectories.setFrom(mySourceDirectories)
    classDirectories.setFrom(classFileTrees)
    executionData.setFrom(execFileTree)
}
