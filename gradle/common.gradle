apply from: rootProject.file("gradle/build-config.gradle")
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'jacoco'

hilt {
    enableExperimentalClasspathAggregation = true
}

dependencies {
    implementation libs.kotlin.coroutines.android
    implementation libs.timber
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.kotlinx.datetime
    testImplementation project(':testUtil')
    testImplementation libs.junit
    testImplementation libs.mockk
    testImplementation libs.kotest
    testImplementation libs.test.core
}

// For coverage of tests with Robolectric
android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                // https://github.com/gradle/gradle/issues/5184
                excludes = ['jdk.internal.*']
            }
        }
    }
}

task jacocoReport(type: JacocoReport) {

    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug")
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "**/testDebugUnitTest.exec"
    ]))
}
